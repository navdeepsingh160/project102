import os
import shutil
import time

from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

from_dir="/Users/macbookair/Downloads"
to_dir="/Users/macbookair/Desktop/project102"

dir_tree = {
    "Image_Files": ['.jpg', '.jpeg', '.png', '.gif', '.jfif'],
    "Video_Files": ['.mpg', '.mp2', '.mpeg', '.mpe', '.mpv', '.mp4', '.m4p', '.m4v', '.avi', '.mov'],
    "Document_Files": ['.ppt', '.xls', '.csv', '.pdf', '.txt'],
    "Setup_Files": ['.exe', '.bin', '.cmd', '.msi', '.dmg']
}



class FileMovementHandler(FileSystemEventHandler):

    def on_created(self,event):
        print(f"Hey, (event.src_path) has been created!")

    def on_deleted(self, event):
        print(f"Oops! Someone deleted (event.src_path}!")

        for key,value in dir_tree.items():
            time.sleep(1)

            if extention in value:
                file_name=os.path.basename(event.src_path)
                print("downloded"+file_name)

                path1=from_dir+'/'+file_name
                path2=to_dir+'/'+key
                path3=to_dir+'/'+key+'/'+file_name

                if os.path.exists(path2):
                    print("Directory Exists...")
                    print("Moving " + file_name + "....")
                    shutil.move(path1, path3)
                    time.sleep(1)

                else:
                    print("Making Directory...")
                    os.makedirs(path2)
                    print("Moving " + file_name + "....")
                    shutil.move(path1, path3)
                    time.sleep(1)    
                



event_handler=FileMovementHandler()

observer=Observer()


observer.schedule(event_handler,from_dir,resursive=True)

observer.start()

try:
    while True:
        time.sleep(2)
        print("runing...")
except KeyboardInterrupt:
    print("stoped")   
    observer.stop() 


